#include <EEPROM.h>// EEPROM addresses for calibration data#define EEPROM_PH_CAL_ADDR    0    // pH calibration starts at address 0#define EEPROM_ORP_CAL_ADDR   16   // ORP calibration starts at address 16#define EEPROM_MAGIC_ADDR     32   // Magic number to verify valid dataconst uint16_t EEPROM_MAGIC = 0xA5C3;  // Magic number for validation/**Save pH calibration to EEPROM/void saveCalibrationToEEPROM(const char type, PHX_Calibration &cal) {int addr = (strcmp(type, "ph") == 0) ? EEPROM_PH_CAL_ADDR : EEPROM_ORP_CAL_ADDR;EEPROM.put(addr, cal);EEPROM.put(EEPROM_MAGIC_ADDR, EEPROM_MAGIC);  // Mark as validSerial.print("Calibration saved to EEPROM: ");Serial.println(type);}/**Load calibration from EEPROM/bool loadCalibrationFromEEPROM(const char type, PHX_Calibration &cal) {// Check if EEPROM has valid datauint16_t magic;EEPROM.get(EEPROM_MAGIC_ADDR, magic);if (magic != EEPROM_MAGIC) {Serial.println("No valid calibration in EEPROM");return false;}int addr = (strcmp(type, "ph") == 0) ? EEPROM_PH_CAL_ADDR : EEPROM_ORP_CAL_ADDR;EEPROM.get(addr, cal);// Validate data makes senseif (abs(cal.ref2_mV - cal.ref1_mV) < 50.0) {Serial.println("Invalid calibration data in EEPROM");return false;}Serial.print("Calibration loaded from EEPROM: ");Serial.println(type);return true;}